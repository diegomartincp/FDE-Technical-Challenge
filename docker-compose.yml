services:
  app:
    build: .
    container_name: flask_app
    restart: unless-stopped
    ports:
      - "5000:5000"
    env_file:
      - .env

  db:
    image: postgres:15
    container_name: mi_postgres_db
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./db/db-export.sql:/docker-entrypoint-initdb.d/db-export.sql
      - ./dbdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  superset:
    image: apache/superset:latest
    container_name: superset
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "8088:8088"
    depends_on:
      - db
    volumes:
      - .superset_home:/app/superset_home
      - ./docker/requirements-local.txt:/app/requirements-local.txt
      - ./docker/superset_config.py:/app/superset_config.py

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - app
      - superset

  certbot:
    image: certbot/certbot
    container_name: certbot
    restart: unless-stopped
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: /bin/sh -c
    command: >
      "trap exit TERM; while :; do sleep 6h & wait $${!}; certbot renew; done"

volumes:
  pgdata:
